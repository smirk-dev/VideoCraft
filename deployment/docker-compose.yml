# docker-compose.yml for VideoCraft AI Video Editor

services:
  # Backend FastAPI Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./temp:/app/temp
      - ./logs:/app/logs
      - ./models_cache:/app/models_cache
    environment:
      - DEBUG=True
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=postgresql://videocraft:password@db:5432/videocraft
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - videocraft-network

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - videocraft-network

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=videocraft
      - POSTGRES_USER=videocraft
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - videocraft-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - videocraft-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - videocraft-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  videocraft-network:
    driver: bridge
